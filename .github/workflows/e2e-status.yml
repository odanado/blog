name: E2E Test Status Management

on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]
  workflow_run:
    workflows: ["CI"]
    types: [completed]

jobs:
  update-status:
    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      pull-requests: read
    steps:
      - name: Get PR number
        id: pr
        uses: actions/github-script@v8
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });

            const prNumber = context.payload.workflow_run.pull_requests[0]?.number;
            if (!prNumber) {
              core.setFailed('No PR number found');
              return;
            }

            core.setOutput('number', prNumber);
            return prNumber;

      - name: Check E2E test results
        id: check-e2e
        uses: actions/github-script@v8
        with:
          script: |
            const runId = context.payload.workflow_run.id;
            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
            });

            const e2eJob = jobs.data.jobs.find(job => job.name === 'build');
            const e2eSteps = e2eJob?.steps || [];
            const e2eTestStep = e2eSteps.find(step => step.name === 'Run e2e tests');

            const e2eFailed = e2eTestStep?.conclusion === 'failure';
            core.setOutput('failed', e2eFailed);

            return e2eFailed;

      - name: Check for approval label
        id: check-label
        uses: actions/github-script@v8
        with:
          script: |
            const prNumber = '${{ steps.pr.outputs.number }}';
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const hasApprovalLabel = pr.labels.some(label => label.name === 'e2e-approved');
            core.setOutput('approved', hasApprovalLabel);

            return hasApprovalLabel;

      - name: Update commit status
        uses: actions/github-script@v8
        with:
          script: |
            const e2eFailed = '${{ steps.check-e2e.outputs.failed }}' === 'true';
            const isApproved = '${{ steps.check-label.outputs.approved }}' === 'true';
            const sha = context.payload.workflow_run.head_sha;

            let state, description;

            if (e2eFailed && !isApproved) {
              state = 'pending';
              description = 'E2E tests failed - awaiting manual approval';
            } else if (isApproved) {
              state = 'success';
              description = 'E2E tests approved by reviewer';
            } else {
              state = 'success';
              description = 'E2E tests passed';
            }

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: state,
              description: description,
              context: 'E2E Tests',
            });

  label-update:
    if: github.event_name == 'pull_request' && (github.event.action == 'labeled' || github.event.action == 'unlabeled')
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      pull-requests: read
    steps:
      - name: Check if e2e-approved label was added/removed
        id: check-label-change
        run: |
          if [[ "${{ github.event.label.name }}" == "e2e-approved" ]]; then
            echo "relevant=true" >> $GITHUB_OUTPUT
          else
            echo "relevant=false" >> $GITHUB_OUTPUT
          fi

      - name: Update status if label changed
        if: steps.check-label-change.outputs.relevant == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const sha = context.payload.pull_request.head.sha;
            const action = context.payload.action;

            let state, description;

            if (action === 'labeled') {
              state = 'success';
              description = 'E2E tests approved by reviewer';
            } else {
              // Check if there were previous e2e failures
              const statuses = await github.rest.repos.listCommitStatusesForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: sha,
              });
              
              const e2eStatus = statuses.data.find(status => status.context === 'E2E Tests');
              if (e2eStatus && e2eStatus.description.includes('failed')) {
                state = 'pending';
                description = 'E2E tests failed - awaiting manual approval';
              } else {
                // No action needed if tests passed originally
                return;
              }
            }

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: state,
              description: description,
              context: 'E2E Tests',
            });
